pipeline {
    environment {
        registry = "durairajsekar/simplehtml"
        registryCredential = 'docker_cred'
        dockerImage = ''
        kubectlImage = 'lachlanevenson/k8s-kubectl:v1.21.0' // Use the desired kubectl version
    }
    agent any
    stages {
        stage('Cloning our Git') {
            steps {
                git branch: "gh-pages", url: 'https://github.com/DURAIRAJ17996/beginner-html-site-styled.git'
            }
        }
        stage('Building our image') {
            steps {
                script {
                    dockerImage = docker.build registry + ":$BUILD_NUMBER"
                }
            }
        }
        stage('Push image to Docker registry') {
            steps {
                script {
                    docker.withRegistry('', registryCredential) {
                        dockerImage.push("latest")
                    }
                }
            }
        }
        stage('Deploy Docker Image to Minikube') {
            steps {
                script {
                    // Set the Minikube context (assumes you have already started Minikube)
                    sh "minikube profile minikube"  // Set the Minikube profile explicitly

                    
                    // Deploy your Docker image to Minikube
                    sh "kubectl create deployment simplehtml --image=$registry:latest"
                    sh "kubectl expose deployment simplehtml --type=NodePort --port=80"

                    // Wait for the deployment to be ready (optional)
                    sh "kubectl rollout status deployment/simplehtml"
                    
                    // Get the NodePort to access the service
                    sh "export NODE_PORT=\$(kubectl get svc simplehtml -o jsonpath='{.spec.ports[0].nodePort}')"

                    
                    // Access the application in Minikube (assuming Minikube's IP is accessible)
                    echo "Access your application at: http://192.168.49.2:$NODE_PORT"
                }
            }
        }
        stage('Cleaning up') {
            steps {
                sh "docker rmi $registry:$BUILD_NUMBER"
            }
        }
    }
}
